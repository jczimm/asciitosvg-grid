#!/usr/bin/env node
const getStdin = require('get-stdin');
const { parser } = require('..');

const argv = require('yargs')
  .command('$0', `Encode ASCII to allow embedding in image source in a markdown file, for use with asciitosvg.
  Provide input via STDIN (see example).`, (yargs) => {
    yargs
      .option('format', { alias: 'f', default: 'raw' })
      .option('markdown', { alias: 'm' })
      .option('host-origin', { alias: 'h', default: 'https://asciitosvg.now.sh' })
      .example('$0 -f raw -m -h http://localhost:3000 < demo/input.txt')
  }, encodeAscii)
  .help()
  .argv;

function encodeAscii(argv) {
  return getStdin()
    .then((asciiInput) => {
      if (!asciiInput) throw new Error('No input provided');
      switch (argv.format) {
        case 'raw':
          return parser.escapeAscii(asciiInput);
        case 'base64':
          return parser.util.btoa(asciiInput);
        case 'unicode':
          return parser.util.miniUni.encode(asciiInput);
      }
    })
    .then(argv.markdown
      ? s => `![ascii diagram rendered with asciitosvg](${argv.hostOrigin}/render/${argv.format}/${s})`
      : s => s)
    .then(console.log.bind(console));
}